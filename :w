import { useCallback, useEffect, useState } from "react";
import { validateGhXml } from "../utils/validate-gh-xml";

export function useXmlPaste(
  setAddError: React.Dispatch<React.SetStateAction<string>>
) {
  const [xmlData, setXmlData] = useState("");
  const [isValidXml, setIsValidXml] = useState(false);
  const handlePasteFromClipboard = useCallback(async () => {
    setAddError("");
    try {
      const text = await navigator.clipboard.readText();
      if (text.length === 0) {
        setXmlData("");
        setAddError("Clipboard is empty");
        return;
      }

      if (typeof text !== "string") {
        console.log("text is not string");
      }

      const isValid = validateGhXml(text);
      if (isValid) {
        setIsValidXml(true);
        setXmlData(text);
      } else {
        setIsValidXml(false);
        setXmlData("");
        setAddError("XML is not valid");
      }
    } catch (err) {
      setXmlData("");
      setAddError("Failed to read clipboard contents");
    }
  }, [setXmlData, setAddError]);

  return { xmlData, setXmlData, isValidXml, handlePasteFromClipboard };
}
